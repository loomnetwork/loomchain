syntax = "proto3";

import "github.com/loomnetwork/go-loom/types/types.proto";

package karma;

message KarmaParams {
    bool mutable_oracle = 1;
    int64 max_karma = 2;
    Address Oracle = 3;
    map<string, int64> sources = 4;
    repeated Validator validators = 5;
}

message KarmaParamsValidator {
    KarmaParams Params = 1;
    Validator Validator = 2;
    Address Oracle = 3;
}

message KarmaParamsValidatorNewMaxKarma {
    int64 max_karma = 1;
    Validator Validator = 2;
}

message KarmaParamsValidatorNewOracle {
    Address NewOracle = 1;
    Validator Validator = 2;
}
message KarmaParamsMutableValidator{
    bool mutable_oracle = 1;
    Validator Validator = 2;
}

message KarmaConfig {
    bool mutable_oracle = 1;
    int64 max_karma = 2;
    Address Oracle = 3;
    map<string, int64> sources = 4;
    int64 last_update_time = 5;
}

message KarmaSource {
    string name = 1;
    int64 reward = 2;
}

message KarmaState {
    map<string, int64> source_states = 1;
    int64 last_update_time = 2;
}

message KarmaStateUser {
    map<string, int64> source_states = 1;
    Address User = 2;
    Address Oracle = 3;
}

message KarmaStateKeyUser {
    repeated string state_keys = 1;
    Address User = 2;
    Address Oracle = 3;
}

message KarmaInitRequest {
    KarmaParams Params = 1;
}

message KarmaUserToken{
    Address Owner = 1;
    int64 token_count = 2;
}

message KarmaTotal{
    int64 count = 1;
}

