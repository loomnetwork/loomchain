// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/loomnetwork/loomchain/builtin/plugins/gateway/gateway.proto

/*
Package gateway is a generated protocol buffer package.

It is generated from these files:
	github.com/loomnetwork/loomchain/builtin/plugins/gateway/gateway.proto

It has these top-level messages:
	GatewayState
	FTDeposit
	NFTDeposit
	InitRequest
	ProcessEventBatchRequest
	GatewayStateRequest
	GatewayStateResponse
*/
package gateway

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import types "github.com/loomnetwork/go-loom/types"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type GatewayState struct {
	LastEthBlock uint64 `protobuf:"varint,1,opt,name=last_eth_block,json=lastEthBlock,proto3" json:"last_eth_block,omitempty"`
	// TODO: These are just temporary, actual balances will be maintained by coin contracts,
	// for now this just tracks the ETH and one ERC20 balance on the Gateway
	EthBalance   *types.BigUInt `protobuf:"bytes,2,opt,name=eth_balance,json=ethBalance" json:"eth_balance,omitempty"`
	Erc20Balance *types.BigUInt `protobuf:"bytes,3,opt,name=erc20_balance,json=erc20Balance" json:"erc20_balance,omitempty"`
}

func (m *GatewayState) Reset()                    { *m = GatewayState{} }
func (m *GatewayState) String() string            { return proto.CompactTextString(m) }
func (*GatewayState) ProtoMessage()               {}
func (*GatewayState) Descriptor() ([]byte, []int) { return fileDescriptorGateway, []int{0} }

func (m *GatewayState) GetLastEthBlock() uint64 {
	if m != nil {
		return m.LastEthBlock
	}
	return 0
}

func (m *GatewayState) GetEthBalance() *types.BigUInt {
	if m != nil {
		return m.EthBalance
	}
	return nil
}

func (m *GatewayState) GetErc20Balance() *types.BigUInt {
	if m != nil {
		return m.Erc20Balance
	}
	return nil
}

// Fungible Token Deposit (ETH or ERC20) made into the Gateway on Ethereum mainnet
type FTDeposit struct {
	// Token contract address, blank if ETH
	Token    *types.Address `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	From     *types.Address `protobuf:"bytes,2,opt,name=from" json:"from,omitempty"`
	Amount   *types.BigUInt `protobuf:"bytes,3,opt,name=amount" json:"amount,omitempty"`
	EthBlock uint64         `protobuf:"varint,4,opt,name=eth_block,json=ethBlock,proto3" json:"eth_block,omitempty"`
}

func (m *FTDeposit) Reset()                    { *m = FTDeposit{} }
func (m *FTDeposit) String() string            { return proto.CompactTextString(m) }
func (*FTDeposit) ProtoMessage()               {}
func (*FTDeposit) Descriptor() ([]byte, []int) { return fileDescriptorGateway, []int{1} }

func (m *FTDeposit) GetToken() *types.Address {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *FTDeposit) GetFrom() *types.Address {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *FTDeposit) GetAmount() *types.BigUInt {
	if m != nil {
		return m.Amount
	}
	return nil
}

func (m *FTDeposit) GetEthBlock() uint64 {
	if m != nil {
		return m.EthBlock
	}
	return 0
}

// Non-Fungible Token Deposit (ERC721) made into the Gateway on Ethereum mainnet
type NFTDeposit struct {
	// Token contract address
	Token    *types.Address `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	From     *types.Address `protobuf:"bytes,2,opt,name=from" json:"from,omitempty"`
	Uid      *types.BigUInt `protobuf:"bytes,3,opt,name=uid" json:"uid,omitempty"`
	EthBlock uint64         `protobuf:"varint,4,opt,name=eth_block,json=ethBlock,proto3" json:"eth_block,omitempty"`
}

func (m *NFTDeposit) Reset()                    { *m = NFTDeposit{} }
func (m *NFTDeposit) String() string            { return proto.CompactTextString(m) }
func (*NFTDeposit) ProtoMessage()               {}
func (*NFTDeposit) Descriptor() ([]byte, []int) { return fileDescriptorGateway, []int{2} }

func (m *NFTDeposit) GetToken() *types.Address {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *NFTDeposit) GetFrom() *types.Address {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *NFTDeposit) GetUid() *types.BigUInt {
	if m != nil {
		return m.Uid
	}
	return nil
}

func (m *NFTDeposit) GetEthBlock() uint64 {
	if m != nil {
		return m.EthBlock
	}
	return 0
}

type InitRequest struct {
}

func (m *InitRequest) Reset()                    { *m = InitRequest{} }
func (m *InitRequest) String() string            { return proto.CompactTextString(m) }
func (*InitRequest) ProtoMessage()               {}
func (*InitRequest) Descriptor() ([]byte, []int) { return fileDescriptorGateway, []int{3} }

// Batch of events from the Gateway on Ethereum mainnet
type ProcessEventBatchRequest struct {
	FtDeposits  []*FTDeposit  `protobuf:"bytes,1,rep,name=ft_deposits,json=ftDeposits" json:"ft_deposits,omitempty"`
	NftDeposits []*NFTDeposit `protobuf:"bytes,2,rep,name=nft_deposits,json=nftDeposits" json:"nft_deposits,omitempty"`
}

func (m *ProcessEventBatchRequest) Reset()                    { *m = ProcessEventBatchRequest{} }
func (m *ProcessEventBatchRequest) String() string            { return proto.CompactTextString(m) }
func (*ProcessEventBatchRequest) ProtoMessage()               {}
func (*ProcessEventBatchRequest) Descriptor() ([]byte, []int) { return fileDescriptorGateway, []int{4} }

func (m *ProcessEventBatchRequest) GetFtDeposits() []*FTDeposit {
	if m != nil {
		return m.FtDeposits
	}
	return nil
}

func (m *ProcessEventBatchRequest) GetNftDeposits() []*NFTDeposit {
	if m != nil {
		return m.NftDeposits
	}
	return nil
}

type GatewayStateRequest struct {
}

func (m *GatewayStateRequest) Reset()                    { *m = GatewayStateRequest{} }
func (m *GatewayStateRequest) String() string            { return proto.CompactTextString(m) }
func (*GatewayStateRequest) ProtoMessage()               {}
func (*GatewayStateRequest) Descriptor() ([]byte, []int) { return fileDescriptorGateway, []int{5} }

type GatewayStateResponse struct {
	State *GatewayState `protobuf:"bytes,1,opt,name=state" json:"state,omitempty"`
}

func (m *GatewayStateResponse) Reset()                    { *m = GatewayStateResponse{} }
func (m *GatewayStateResponse) String() string            { return proto.CompactTextString(m) }
func (*GatewayStateResponse) ProtoMessage()               {}
func (*GatewayStateResponse) Descriptor() ([]byte, []int) { return fileDescriptorGateway, []int{6} }

func (m *GatewayStateResponse) GetState() *GatewayState {
	if m != nil {
		return m.State
	}
	return nil
}

func init() {
	proto.RegisterType((*GatewayState)(nil), "GatewayState")
	proto.RegisterType((*FTDeposit)(nil), "FTDeposit")
	proto.RegisterType((*NFTDeposit)(nil), "NFTDeposit")
	proto.RegisterType((*InitRequest)(nil), "InitRequest")
	proto.RegisterType((*ProcessEventBatchRequest)(nil), "ProcessEventBatchRequest")
	proto.RegisterType((*GatewayStateRequest)(nil), "GatewayStateRequest")
	proto.RegisterType((*GatewayStateResponse)(nil), "GatewayStateResponse")
}

func init() {
	proto.RegisterFile("github.com/loomnetwork/loomchain/builtin/plugins/gateway/gateway.proto", fileDescriptorGateway)
}

var fileDescriptorGateway = []byte{
	// 402 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x92, 0x4f, 0x8f, 0x93, 0x40,
	0x18, 0xc6, 0xc3, 0xb6, 0xbb, 0xd9, 0x7d, 0xa1, 0x1e, 0x46, 0x4d, 0xc8, 0x6a, 0x0c, 0x41, 0x0f,
	0x35, 0x66, 0x61, 0x53, 0x8f, 0x9e, 0x24, 0xee, 0x9a, 0x5e, 0x8c, 0x41, 0x3d, 0x37, 0x03, 0xbc,
	0x85, 0x49, 0x61, 0x06, 0x99, 0x17, 0x9b, 0x9e, 0xbd, 0x78, 0xf2, 0x33, 0x1b, 0x06, 0xfa, 0xcf,
	0x46, 0x4f, 0x7b, 0x81, 0xe1, 0x79, 0x7e, 0x33, 0x3c, 0xcf, 0xe4, 0x85, 0xfb, 0x5c, 0x50, 0xd1,
	0x26, 0x41, 0xaa, 0xaa, 0xb0, 0x54, 0xaa, 0x92, 0x48, 0x6b, 0xd5, 0xac, 0xcc, 0x3a, 0x2d, 0xb8,
	0x90, 0x61, 0xd2, 0x8a, 0x92, 0x84, 0x0c, 0xeb, 0xb2, 0xcd, 0x85, 0xd4, 0x61, 0xce, 0x09, 0xd7,
	0x7c, 0xb3, 0x7d, 0x07, 0x75, 0xa3, 0x48, 0x5d, 0xdf, 0xfe, 0xe3, 0x9c, 0x5c, 0xdd, 0x74, 0x9f,
	0x21, 0x6d, 0x6a, 0xd4, 0xfd, 0xb3, 0xdf, 0xe1, 0xff, 0xb6, 0xc0, 0xf9, 0xd8, 0x9f, 0xf1, 0x85,
	0x38, 0x21, 0x7b, 0x05, 0x8f, 0x4a, 0xae, 0x69, 0x81, 0x54, 0x2c, 0x92, 0x52, 0xa5, 0x2b, 0xd7,
	0xf2, 0xac, 0xe9, 0x38, 0x76, 0x3a, 0xf5, 0x8e, 0x8a, 0xa8, 0xd3, 0xd8, 0x6b, 0xb0, 0x0d, 0xc0,
	0x4b, 0x2e, 0x53, 0x74, 0xcf, 0x3c, 0x6b, 0x6a, 0xcf, 0x2e, 0x83, 0x48, 0xe4, 0xdf, 0xe6, 0x92,
	0x62, 0x40, 0x2a, 0xa2, 0xde, 0x63, 0x37, 0x30, 0xc1, 0x26, 0x9d, 0xdd, 0xee, 0xe0, 0xd1, 0x5f,
	0xb0, 0x63, 0xec, 0x01, 0xf7, 0x7f, 0x59, 0x70, 0x75, 0xff, 0xf5, 0x03, 0xd6, 0x4a, 0x0b, 0x62,
	0x2f, 0xe0, 0x9c, 0xd4, 0x0a, 0xa5, 0x09, 0xd1, 0x6d, 0x7a, 0x9f, 0x65, 0x0d, 0x6a, 0x1d, 0xf7,
	0x32, 0x7b, 0x0e, 0xe3, 0x65, 0xa3, 0xaa, 0x5d, 0x80, 0xad, 0x6d, 0x54, 0xe6, 0xc1, 0x05, 0xaf,
	0x54, 0x2b, 0xe9, 0xe4, 0x9f, 0x83, 0xce, 0x9e, 0xc1, 0xd5, 0xbe, 0xe8, 0xd8, 0x14, 0xbd, 0xc4,
	0xa1, 0xa4, 0xff, 0xd3, 0x02, 0xf8, 0xf4, 0x50, 0x59, 0xae, 0x61, 0xd4, 0x8a, 0xec, 0x24, 0x48,
	0x27, 0xfe, 0x3f, 0xc5, 0x04, 0xec, 0xb9, 0x14, 0x14, 0xe3, 0xf7, 0x16, 0x35, 0xf9, 0x6b, 0x70,
	0x3f, 0x37, 0x2a, 0x45, 0xad, 0xef, 0x7e, 0xa0, 0xa4, 0x88, 0x53, 0x5a, 0x0c, 0x1e, 0x7b, 0x03,
	0xf6, 0x92, 0x16, 0x59, 0x9f, 0x57, 0xbb, 0x96, 0x37, 0x9a, 0xda, 0x33, 0x08, 0x76, 0x15, 0x62,
	0x58, 0xd2, 0xb0, 0xd4, 0x2c, 0x00, 0x47, 0x1e, 0xd2, 0x67, 0x86, 0xb6, 0x83, 0x7d, 0xe3, 0xd8,
	0x96, 0x7b, 0xde, 0x7f, 0x0a, 0x8f, 0x0f, 0x07, 0x65, 0x9b, 0xe7, 0x1d, 0x3c, 0x39, 0x96, 0x75,
	0xad, 0xa4, 0x46, 0xf6, 0x12, 0xce, 0x75, 0x27, 0x0c, 0xb7, 0x35, 0x09, 0x8e, 0xa8, 0xde, 0x4b,
	0x2e, 0xcc, 0x10, 0xbe, 0xfd, 0x13, 0x00, 0x00, 0xff, 0xff, 0xe7, 0x18, 0x8d, 0x62, 0x00, 0x03,
	0x00, 0x00,
}
