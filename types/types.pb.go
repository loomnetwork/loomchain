// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/loomnetwork/loom/types/types.proto

/*
Package types is a generated protocol buffer package.

It is generated from these files:
	github.com/loomnetwork/loom/types/types.proto

It has these top-level messages:
	Address
	Transaction
	DummyTx
*/
package types

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type Address struct {
	ChainId string `protobuf:"bytes,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	Local   []byte `protobuf:"bytes,2,opt,name=local,proto3" json:"local,omitempty"`
}

func (m *Address) Reset()                    { *m = Address{} }
func (m *Address) String() string            { return proto.CompactTextString(m) }
func (*Address) ProtoMessage()               {}
func (*Address) Descriptor() ([]byte, []int) { return fileDescriptorTypes, []int{0} }

func (m *Address) GetChainId() string {
	if m != nil {
		return m.ChainId
	}
	return ""
}

func (m *Address) GetLocal() []byte {
	if m != nil {
		return m.Local
	}
	return nil
}

type Transaction struct {
	Id   uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *Transaction) Reset()                    { *m = Transaction{} }
func (m *Transaction) String() string            { return proto.CompactTextString(m) }
func (*Transaction) ProtoMessage()               {}
func (*Transaction) Descriptor() ([]byte, []int) { return fileDescriptorTypes, []int{1} }

func (m *Transaction) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Transaction) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type DummyTx struct {
	Val string `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	Key string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (m *DummyTx) Reset()                    { *m = DummyTx{} }
func (m *DummyTx) String() string            { return proto.CompactTextString(m) }
func (*DummyTx) ProtoMessage()               {}
func (*DummyTx) Descriptor() ([]byte, []int) { return fileDescriptorTypes, []int{2} }

func (m *DummyTx) GetVal() string {
	if m != nil {
		return m.Val
	}
	return ""
}

func (m *DummyTx) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func init() {
	proto.RegisterType((*Address)(nil), "Address")
	proto.RegisterType((*Transaction)(nil), "Transaction")
	proto.RegisterType((*DummyTx)(nil), "DummyTx")
}

func init() { proto.RegisterFile("github.com/loomnetwork/loom/types/types.proto", fileDescriptorTypes) }

var fileDescriptorTypes = []byte{
	// 191 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xd2, 0x4d, 0xcf, 0x2c, 0xc9,
	0x28, 0x4d, 0xd2, 0x4b, 0xce, 0xcf, 0xd5, 0xcf, 0xc9, 0xcf, 0xcf, 0xcd, 0x4b, 0x2d, 0x29, 0xcf,
	0x2f, 0xca, 0x06, 0xb3, 0xf5, 0x4b, 0x2a, 0x0b, 0x52, 0x8b, 0x21, 0xa4, 0x5e, 0x41, 0x51, 0x7e,
	0x49, 0xbe, 0x92, 0x15, 0x17, 0xbb, 0x63, 0x4a, 0x4a, 0x51, 0x6a, 0x71, 0xb1, 0x90, 0x24, 0x17,
	0x47, 0x72, 0x46, 0x62, 0x66, 0x5e, 0x7c, 0x66, 0x8a, 0x04, 0xa3, 0x02, 0xa3, 0x06, 0x67, 0x10,
	0x3b, 0x98, 0xef, 0x99, 0x22, 0x24, 0xc2, 0xc5, 0x9a, 0x93, 0x9f, 0x9c, 0x98, 0x23, 0xc1, 0xa4,
	0xc0, 0xa8, 0xc1, 0x13, 0x04, 0xe1, 0x28, 0x19, 0x72, 0x71, 0x87, 0x14, 0x25, 0xe6, 0x15, 0x27,
	0x26, 0x97, 0x64, 0xe6, 0xe7, 0x09, 0xf1, 0x71, 0x31, 0x41, 0x75, 0xf2, 0x06, 0x31, 0x65, 0xa6,
	0x08, 0x09, 0x71, 0xb1, 0xa4, 0x24, 0x96, 0x24, 0x42, 0xf5, 0x80, 0xd9, 0x4a, 0xba, 0x5c, 0xec,
	0x2e, 0xa5, 0xb9, 0xb9, 0x95, 0x21, 0x15, 0x42, 0x02, 0x5c, 0xcc, 0x65, 0x89, 0x39, 0x50, 0x9b,
	0x40, 0x4c, 0x90, 0x48, 0x76, 0x6a, 0x25, 0x58, 0x3d, 0x67, 0x10, 0x88, 0x99, 0xc4, 0x06, 0x76,
	0xa4, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0xdc, 0x5a, 0x8a, 0x54, 0xd5, 0x00, 0x00, 0x00,
}
