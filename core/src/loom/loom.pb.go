// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: loom.proto

/*
Package loom is a generated protocol buffer package.

It is generated from these files:
	loom.proto

It has these top-level messages:
	Signer
	SignedTx
	DummyTx
*/
package loom

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type Signer struct {
	Signature []byte `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	PublicKey []byte `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
}

func (m *Signer) Reset()                    { *m = Signer{} }
func (m *Signer) String() string            { return proto.CompactTextString(m) }
func (*Signer) ProtoMessage()               {}
func (*Signer) Descriptor() ([]byte, []int) { return fileDescriptorLoom, []int{0} }

func (m *Signer) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *Signer) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

type SignedTx struct {
	Inner   []byte    `protobuf:"bytes,1,opt,name=inner,proto3" json:"inner,omitempty"`
	Signers []*Signer `protobuf:"bytes,2,rep,name=signers" json:"signers,omitempty"`
}

func (m *SignedTx) Reset()                    { *m = SignedTx{} }
func (m *SignedTx) String() string            { return proto.CompactTextString(m) }
func (*SignedTx) ProtoMessage()               {}
func (*SignedTx) Descriptor() ([]byte, []int) { return fileDescriptorLoom, []int{1} }

func (m *SignedTx) GetInner() []byte {
	if m != nil {
		return m.Inner
	}
	return nil
}

func (m *SignedTx) GetSigners() []*Signer {
	if m != nil {
		return m.Signers
	}
	return nil
}

type DummyTx struct {
	Val string `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	Key string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (m *DummyTx) Reset()                    { *m = DummyTx{} }
func (m *DummyTx) String() string            { return proto.CompactTextString(m) }
func (*DummyTx) ProtoMessage()               {}
func (*DummyTx) Descriptor() ([]byte, []int) { return fileDescriptorLoom, []int{2} }

func (m *DummyTx) GetVal() string {
	if m != nil {
		return m.Val
	}
	return ""
}

func (m *DummyTx) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func init() {
	proto.RegisterType((*Signer)(nil), "Signer")
	proto.RegisterType((*SignedTx)(nil), "SignedTx")
	proto.RegisterType((*DummyTx)(nil), "DummyTx")
}

func init() { proto.RegisterFile("loom.proto", fileDescriptorLoom) }

var fileDescriptorLoom = []byte{
	// 172 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xca, 0xc9, 0xcf, 0xcf,
	0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x72, 0xe5, 0x62, 0x0b, 0xce, 0x4c, 0xcf, 0x4b, 0x2d,
	0x12, 0x92, 0xe1, 0xe2, 0x2c, 0xce, 0x4c, 0xcf, 0x4b, 0x2c, 0x29, 0x2d, 0x4a, 0x95, 0x60, 0x54,
	0x60, 0xd4, 0xe0, 0x09, 0x42, 0x08, 0x08, 0xc9, 0x72, 0x71, 0x15, 0x94, 0x26, 0xe5, 0x64, 0x26,
	0xc7, 0x67, 0xa7, 0x56, 0x4a, 0x30, 0x41, 0xa4, 0x21, 0x22, 0xde, 0xa9, 0x95, 0x4a, 0xce, 0x5c,
	0x1c, 0x60, 0x63, 0x52, 0x42, 0x2a, 0x84, 0x44, 0xb8, 0x58, 0x33, 0xf3, 0xf2, 0x52, 0x8b, 0xa0,
	0x86, 0x40, 0x38, 0x42, 0x8a, 0x5c, 0xec, 0xc5, 0x60, 0x8b, 0x8a, 0x25, 0x98, 0x14, 0x98, 0x35,
	0xb8, 0x8d, 0xd8, 0xf5, 0x20, 0x16, 0x07, 0xc1, 0xc4, 0x95, 0x74, 0xb9, 0xd8, 0x5d, 0x4a, 0x73,
	0x73, 0x2b, 0x43, 0x2a, 0x84, 0x04, 0xb8, 0x98, 0xcb, 0x12, 0x73, 0xc0, 0x26, 0x70, 0x06, 0x81,
	0x98, 0x20, 0x11, 0x98, 0xcd, 0x9c, 0x41, 0x20, 0x66, 0x12, 0x1b, 0xd8, 0x07, 0xc6, 0x80, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x3c, 0x6f, 0x8f, 0xda, 0xcf, 0x00, 0x00, 0x00,
}
