// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/loomnetwork/loomchain/registry/registry.proto

/*
Package registry is a generated protocol buffer package.

It is generated from these files:
	github.com/loomnetwork/loomchain/registry/registry.proto

It has these top-level messages:
	Record
	VersionRecord
*/
package registry

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import types "github.com/loomnetwork/go-loom/types"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type Record struct {
	Name           string         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Address        *types.Address `protobuf:"bytes,2,opt,name=address" json:"address,omitempty"`
	Owner          *types.Address `protobuf:"bytes,3,opt,name=owner" json:"owner,omitempty"`
	InitialVersion string         `protobuf:"bytes,4,opt,name=initial_version,json=initialVersion,proto3" json:"initial_version,omitempty"`
}

func (m *Record) Reset()                    { *m = Record{} }
func (m *Record) String() string            { return proto.CompactTextString(m) }
func (*Record) ProtoMessage()               {}
func (*Record) Descriptor() ([]byte, []int) { return fileDescriptorRegistry, []int{0} }

func (m *Record) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Record) GetAddress() *types.Address {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *Record) GetOwner() *types.Address {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *Record) GetInitialVersion() string {
	if m != nil {
		return m.InitialVersion
	}
	return ""
}

type VersionRecord struct {
	ContractAddrKey string `protobuf:"bytes,1,opt,name=contract_addr_key,json=contractAddrKey,proto3" json:"contract_addr_key,omitempty"`
}

func (m *VersionRecord) Reset()                    { *m = VersionRecord{} }
func (m *VersionRecord) String() string            { return proto.CompactTextString(m) }
func (*VersionRecord) ProtoMessage()               {}
func (*VersionRecord) Descriptor() ([]byte, []int) { return fileDescriptorRegistry, []int{1} }

func (m *VersionRecord) GetContractAddrKey() string {
	if m != nil {
		return m.ContractAddrKey
	}
	return ""
}

func init() {
	proto.RegisterType((*Record)(nil), "Record")
	proto.RegisterType((*VersionRecord)(nil), "VersionRecord")
}

func init() {
	proto.RegisterFile("github.com/loomnetwork/loomchain/registry/registry.proto", fileDescriptorRegistry)
}

var fileDescriptorRegistry = []byte{
	// 229 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x8f, 0x31, 0x4b, 0xc4, 0x40,
	0x10, 0x85, 0x89, 0x9e, 0xa7, 0x8e, 0xe8, 0xe1, 0x56, 0xc1, 0x42, 0x8e, 0x34, 0x1e, 0x82, 0x89,
	0x68, 0x23, 0x58, 0x59, 0xdb, 0xa5, 0xb0, 0x0d, 0x7b, 0x9b, 0x21, 0xb7, 0xdc, 0x65, 0xe7, 0x98,
	0x1d, 0x3d, 0xf2, 0x13, 0xfc, 0xd7, 0x92, 0xdd, 0x8d, 0x85, 0x60, 0xb3, 0x7c, 0xf3, 0x66, 0x1f,
	0xef, 0x0d, 0xbc, 0x74, 0x56, 0x36, 0x9f, 0xeb, 0xd2, 0x50, 0x5f, 0xed, 0x88, 0x7a, 0x87, 0x72,
	0x20, 0xde, 0x06, 0x36, 0x1b, 0x6d, 0x5d, 0xc5, 0xd8, 0x59, 0x2f, 0x3c, 0xfc, 0x42, 0xb9, 0x67,
	0x12, 0xba, 0x79, 0xfc, 0xc7, 0xd9, 0xd1, 0xc3, 0x38, 0x56, 0x32, 0xec, 0xd1, 0xc7, 0x37, 0x3a,
	0x8a, 0xef, 0x0c, 0xe6, 0x35, 0x1a, 0xe2, 0x56, 0x29, 0x98, 0x39, 0xdd, 0x63, 0x9e, 0x2d, 0xb3,
	0xd5, 0x79, 0x1d, 0x58, 0x15, 0x70, 0xaa, 0xdb, 0x96, 0xd1, 0xfb, 0xfc, 0x68, 0x99, 0xad, 0x2e,
	0x9e, 0xce, 0xca, 0xb7, 0x38, 0xd7, 0xd3, 0x42, 0xdd, 0xc2, 0x09, 0x1d, 0x1c, 0x72, 0x7e, 0xfc,
	0xe7, 0x47, 0x94, 0xd5, 0x1d, 0x2c, 0xac, 0xb3, 0x62, 0xf5, 0xae, 0xf9, 0x42, 0xf6, 0x96, 0x5c,
	0x3e, 0x0b, 0x11, 0x57, 0x49, 0xfe, 0x88, 0x6a, 0xf1, 0x0a, 0x97, 0x09, 0x53, 0xa3, 0x7b, 0xb8,
	0x36, 0xe4, 0x84, 0xb5, 0x91, 0x66, 0x4c, 0x6b, 0xb6, 0x38, 0xa4, 0x7a, 0x8b, 0x69, 0x31, 0x86,
	0xbd, 0xe3, 0xb0, 0x9e, 0x87, 0x7b, 0x9e, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0xff, 0x97, 0xb3,
	0x66, 0x3d, 0x01, 0x00, 0x00,
}
