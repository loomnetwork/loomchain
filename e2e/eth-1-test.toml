# Since empty blocks are disabled for this test a tx needs to be sent through to create the first two
# blocks...
[[TestCases]]
  RunCmd = "{{ $.LoomPath }} deploy -b SimpleStore.bin -n SimpleStore -k {{index $.AccountPrivKeyPathList 0}}"
  Datafiles = [
    { Filename = "SimpleStore.bin", Contents = "6060604052341561000f57600080fd5b60d38061001d6000396000f3006060604052600436106049576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806360fe47b114604e5780636d4ce63c14606e575b600080fd5b3415605857600080fd5b606c60048080359060200190919050506094565b005b3415607857600080fd5b607e609e565b6040518082815260200191505060405180910390f35b8060008190555050565b600080549050905600a165627a7a723058202b229fba38c096f9c9c81ba2633fb4a7b418032de7862b60d1509a4054e2d6bb0029" }
  ]

[[TestCases]]
  RunCmd = "/usr/bin/curl -X POST --data {\"jsonrpc\":\"2.0\",\"method\":\"eth_blockNumber\",\"params\":[],\"id\":83} {{index $.NodeProxyAppAddressList 0}}/eth"
  All = true
  Condition = "contains"
  Expected = [
                "\"result\": \"0x",
                "\"jsonrpc\": \"2.0\",",
                "\"id\": 83"
             ]

# Test batch requests. Two genuine requests and one which fails.
[[TestCases]]
  RunCmd = '/usr/bin/curl -X POST --data [{"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":83},{"jsonrpc":"2.0","method":"eth_blockNumber","params":["invalid"],"id":83},{"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":83}] {{index $.NodeProxyAppAddressList 0}}/eth'
  Condition = "contains"
  Expected = [
        '"result": "0x',
        '"error":',
        '"code": -32602',
        '"message": "Parse params"',
        '"data": "excess input arguments, expected 0 got 1"',
  ]

# Confirm that an invalid transaction reciept for an invalid hash returns a null result.
[[TestCases]]
  RunCmd = '/usr/bin/curl -X POST --data {"jsonrpc":"2.0","method":"eth_getTransactionReceipt","params":["0x1111111111111111111111111111111111111111111111111111111111111111"],"id":83} {{index $.NodeProxyAppAddressList 0}}/eth'
  Condition = "contains"
  Expected = [ '"result": null,' ]