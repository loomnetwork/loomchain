const fs = require('fs');
const path = require('path');
const Web3 = require('web3');
const MyToken = artifacts.require('MyToken');
//var abi = require('ethereumjs-abi');

contract('MyToken', async (accounts) => {
  let web3js;

  beforeEach(async () => {
    if (!process.env.CLUSTER_DIR) {
      throw new Error('CLUSTER_DIR env var not defined');
    }
    let nodeAddr = fs.readFileSync(path.join(process.env.CLUSTER_DIR, '0', 'node_rpc_addr'), 'utf-8');
    web3js = new Web3(new Web3.providers.HttpProvider(`http://${nodeAddr}/eth`));

    alice = accounts[1];
  });

  it('eth_blockNumber', async () => {
      const blockNumber = await web3js.eth.getBlockNumber();
      assert(0 < blockNumber);
  });

  it('eth_getTransactionReceipt', async () => {
    const tokenContract = await MyToken.deployed();
    const result = await tokenContract.mintToken(1, { from: alice });
    assert.equal(tokenContract.address, result.receipt.contractAddress);

    const receipt = await web3js.eth.getTransactionReceipt(result.tx);
    assert.equal(receipt.to, result.receipt.contractAddress);
    assert.equal(receipt.from, alice);
    assert.equal(1, receipt.logs.length);
    assert.equal(4, receipt.logs[0].topics.length);
    assert.equal(alice, receipt.logs[0].address.toLowerCase());
  });

  it('eth_getTransactionByHash', async () => {
    const tokenContract = await MyToken.deployed();
    const result = await tokenContract.mintToken(2, { from: alice });
    const txObj = await web3js.eth.getTransaction(result.tx);

    assert.equal(txObj.to.toLowerCase(), result.receipt.contractAddress);
    assert.equal(txObj.from.toLowerCase(), alice);
  });

  it('eth_getCode', async () => {
    const tokenContract = await MyToken.deployed();
    const deployedBytecode = '0x608060405260043610610112576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806301ffc9a71461011757806306fdde031461017b578063081812fc1461020b578063095ea7b3146102785780631072cbea146102c557806318160ddd1461031257806319fa8f501461033d57806323b872dd146103a65780632f745c591461041357806342842e0e146104745780634f558e79146104e15780634f6ccce7146105265780636352211e1461056757806370a08231146105d457806395d89b411461062b578063a22cb465146106bb578063b88d4fde1461070a578063c634d032146107bd578063c87b56dd146107ea578063e985e9c514610890575b600080fd5b34801561012357600080fd5b5061016160048036038101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916906020019092919050505061090b565b604051808215151515815260200191505060405180910390f35b34801561018757600080fd5b50610190610972565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101d05780820151818401526020810190506101b5565b50505050905090810190601f1680156101fd5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561021757600080fd5b5061023660048036038101908080359060200190929190505050610a14565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561028457600080fd5b506102c3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a51565b005b3480156102d157600080fd5b50610310600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b96565b005b34801561031e57600080fd5b50610327610ba5565b6040518082815260200191505060405180910390f35b34801561034957600080fd5b50610352610bb2565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b3480156103b257600080fd5b50610411600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610bd9565b005b34801561041f57600080fd5b5061045e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ce4565b6040518082815260200191505060405180910390f35b34801561048057600080fd5b506104df600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d5b565b005b3480156104ed57600080fd5b5061050c60048036038101908080359060200190929190505050610d7c565b604051808215151515815260200191505060405180910390f35b34801561053257600080fd5b5061055160048036038101908080359060200190929190505050610dee565b6040518082815260200191505060405180910390f35b34801561057357600080fd5b5061059260048036038101908080359060200190929190505050610e26565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105e057600080fd5b50610615600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ea4565b6040518082815260200191505060405180910390f35b34801561063757600080fd5b50610640610f28565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610680578082015181840152602081019050610665565b50505050905090810190601f1680156106ad5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156106c757600080fd5b50610708600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050610fca565b005b34801561071657600080fd5b506107bb600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050611106565b005b3480156107c957600080fd5b506107e86004803603810190808035906020019092919050505061112e565b005b3480156107f657600080fd5b506108156004803603810190808035906020019092919050505061113b565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561085557808201518184015260208101905061083a565b50505050905090810190601f1680156108825780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561089c57600080fd5b506108f1600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611204565b604051808215151515815260200191505060405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a0a5780601f106109df57610100808354040283529160200191610a0a565b820191906000526020600020905b8154815290600101906020018083116109ed57829003601f168201915b5050505050905090565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610a5c82610e26565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610a9957600080fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610ad95750610ad88133611204565b5b1515610ae457600080fd5b826002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b610ba1338383610d5b565b5050565b6000600980549050905090565b6301ffc9a77c01000000000000000000000000000000000000000000000000000000000281565b610be33382611298565b1515610bee57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610c2a57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610c6657600080fd5b610c70838261132d565b610c7a8382611430565b610c8482826115ec565b808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000610cef83610ea4565b82101515610cfc57600080fd5b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481101515610d4857fe5b9060005260206000200154905092915050565b610d778383836020604051908101604052806000815250611106565b505050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b6000610df8610ba5565b82101515610e0557600080fd5b600982815481101515610e1457fe5b90600052602060002001549050919050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610e9b57600080fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610ee157600080fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060068054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610fc05780601f10610f9557610100808354040283529160200191610fc0565b820191906000526020600020905b815481529060010190602001808311610fa357829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561100557600080fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b611111848484610bd9565b61111d848484846116c3565b151561112857600080fd5b50505050565b61113833826118e5565b50565b606061114682610d7c565b151561115157600080fd5b600b60008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111f85780601f106111cd576101008083540402835291602001916111f8565b820191906000526020600020905b8154815290600101906020018083116111db57829003601f168201915b50505050509050919050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000806112a483610e26565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061131357508373ffffffffffffffffffffffffffffffffffffffff166112fb84610a14565b73ffffffffffffffffffffffffffffffffffffffff16145b8061132457506113238185611204565b5b91505092915050565b8173ffffffffffffffffffffffffffffffffffffffff1661134d82610e26565b73ffffffffffffffffffffffffffffffffffffffff1614151561136f57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561142c5760006002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5050565b600080600061143f858561193c565b600860008581526020019081526020016000205492506114ab6001600760008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050611a6b90919063ffffffff16565b9150600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811015156114f957fe5b9060005260206000200154905080600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208481548110151561155357fe5b9060005260206000200181905550600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054809190600190036115b39190611cb3565b50600060086000868152602001908152602001600020819055508260086000838152602001908152602001600020819055505050505050565b60006115f88383611a84565b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020829080600181540180825580915050906001820390600052602060002001600090919290919091505550806008600084815260200190815260200160002081905550505050565b6000806116e58573ffffffffffffffffffffffffffffffffffffffff16611bde565b15156116f457600191506118dc565b8473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156117e95780820151818401526020810190506117ce565b50505050905090810190601f1680156118165780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561183857600080fd5b505af115801561184c573d6000803e3d6000fd5b505050506040513d602081101561186257600080fd5b8101908080519060200190929190505050905063150b7a027c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161491505b50949350505050565b6118ef8282611bf1565b600980549050600a60008381526020019081526020016000208190555060098190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b8173ffffffffffffffffffffffffffffffffffffffff1661195c82610e26565b73ffffffffffffffffffffffffffffffffffffffff1614151561197e57600080fd5b6119d16001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611a6b90919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060006001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000828211151515611a7957fe5b818303905092915050565b600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611af257600080fd5b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611b976001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611c9790919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b600080823b905060008111915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611c2d57600080fd5b611c3782826115ec565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b60008183019050828110151515611caa57fe5b80905092915050565b815481835581811115611cda57818360005260206000209182019101611cd99190611cdf565b5b505050565b611d0191905b80821115611cfd576000816000905550600101611ce5565b5090565b905600a165627a7a7230582099c7187037bce767af38713fa67ac1ddf81e7eb7506d1e87d34ac5a3d40aa9a10029'

    const code = await web3js.eth.getCode(tokenContract.address);
    assert.equal(deployedBytecode, code)
    });

  it('eth_getBlockByHash', async () => {
    const tokenContract = await MyToken.deployed();
    const result = await tokenContract.mintToken(3, { from: alice });

    // Do second transaction to move to next block
    await tokenContract.mintToken(4, { from: alice });

    const txObject = await web3js.eth.getTransaction(result.tx, true);
    const blockByHash = await web3js.eth.getBlock(txObject.blockHash, true);
    assert.equal(txObject.blockHash, blockByHash.hash);
    assert.equal(result.receipt.blockNumber, blockByHash.number);

    assert.equal(1, blockByHash.transactions.length);
    assert.equal(alice , blockByHash.transactions[0].from.toLowerCase());
    assert.equal(tokenContract.address ,blockByHash.transactions[0].to.toLowerCase());
    assert.equal(result.receipt.blockNumber ,blockByHash.transactions[0].blockNumber);
    assert.equal(result.tx ,blockByHash.transactions[0].hash);
    assert.equal(txObject.blockHash ,blockByHash.transactions[0].blockHash);
  });

    /*
    it('eth_getLogs', async () => {
        const tokenContract = await MyToken.deployed();
        const result = await tokenContract.mintToken(1, { from: alice });

        const allLogs = await we3js.getPastLogs({
        address: "0x11f4d0A3c12e86B4b5F39B213F7E19D048276DAe",
        topics: ["0x033456732123ffff2342342dd12342434324234234fd234fd23fd4f23d4234"]
        });
        console("alllogs", alogs)

    });


 /*
   it('eth_Call', async () => {
        const tokenContract = await MyToken.deployed();
        await tokenContract.mintToken(3, { from: alice });
        const owner = await tokenContract.ownerOf.call(3);
        console.log("owner", owner);

       // var encoded = abi.simpleEncode("ownerOf(tokenId):(uint256)",
        // "0x0000000000000000000000000000000000000003")
        //console.log("encoeded", encoded);
        let input  = {
              to: tokenContract.address,
              data: "0x498108d60000000000000000000000000000000000000000000000000000000000000003"
        };
        console.log("input", input);
        const ethOwner = await web3js.eth.call({
          to: tokenContract.address,
          data: "0x498108d60000000000000000000000000000000000000000000000000000000000000003"
        },"latest");
        console.log("ethOwner",ethOwner);
        //assert.equal(owner, ethOwner)
      });
   */



});

